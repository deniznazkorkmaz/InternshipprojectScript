{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1i4M32oD6Z7ExK4Iq-AGvnron3zLYRXub","timestamp":1708342087154}],"authorship_tag":"ABX9TyPE42DeWK4U08Bvms0Vp/aG"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"T_Sw9qojTXnT","executionInfo":{"status":"ok","timestamp":1703798526973,"user_tz":-180,"elapsed":35781,"user":{"displayName":"Deniz Naz Korkmaz","userId":"06847001568243793929"}},"outputId":"93f3d938-16f3-45f3-b748-f44beb84118f","colab":{"base_uri":"https://localhost:8080/","height":295}},"outputs":[{"output_type":"stream","name":"stdout","text":["Petek Kodu: 25160044\n","Malzeme Türü: Aluminyum\n","Test Sayısı: 62\n","Kaçak Görülen Yer (Çıkmak için 'exit'): kurve\n","kurve için Kaçak Sayısı: 4\n","Kaçak Görülen Yer (Çıkmak için 'exit'): kollektor cekirdegii\n","kollektor cekirdegii için Kaçak Sayısı: 28\n","Kaçak Görülen Yer (Çıkmak için 'exit'): kilcal-boru\n","kilcal-boru için Kaçak Sayısı: 7\n","Kaçak Görülen Yer (Çıkmak için 'exit'): exit\n","Toplam Test Sayısı: 62\n","Malzeme Çeşitlerine Göre Hata Oranları:\n","Aluminyum:\n","  kurve - Hata Oranı: %6.451612903225806\n","  kollektor cekirdegii - Hata Oranı: %45.16129032258064\n","  kilcal-boru - Hata Oranı: %11.29032258064516\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_7a61e59c-b21d-4af5-9aba-43d37627a31c\", \"Veri.xlsx\", 4955)"]},"metadata":{}}],"source":["import openpyxl\n","\n","def verileri_excel_dosyasina_yaz(file_path, petek_kodu, malzeme_turu, test_sayisi, kacak_yerleri, kacak_sayilari):\n","    try:\n","        workbook = openpyxl.load_workbook(file_path)\n","    except FileNotFoundError:\n","        workbook = openpyxl.Workbook()\n","        header_row = [\"Petek Kodu\", \"Malzeme Türü\", \"Test Sayısı\"] + kacak_yerleri\n","        workbook.active.append(header_row)\n","\n","    sheet = workbook.active\n","    data_row = [petek_kodu, malzeme_turu, test_sayisi] + kacak_sayilari\n","    sheet.append(data_row)\n","\n","    workbook.save(file_path)\n","\n","def hata_oranlarini_hesapla_ve_ciktiyi_al(file_path):\n","    try:\n","        workbook = openpyxl.load_workbook(file_path)\n","    except FileNotFoundError:\n","        print(\"Dosya bulunamadı.\")\n","        return\n","\n","    sheet = workbook.active\n","\n","    toplam_test_sayisi = sum(row[2].value for row in sheet.iter_rows(min_row=2) if row[2].value is not None)\n","    malzeme_hata_sayilari = {}\n","\n","    for row in sheet.iter_rows(min_row=2):\n","        malzeme_turu_cell = row[1]\n","        if malzeme_turu_cell.value is not None:\n","            malzeme_turu = malzeme_turu_cell.value\n","            kacak_sayilari = [cell.value for cell in row[3:] if cell.value is not None]\n","\n","            if malzeme_turu not in malzeme_hata_sayilari:\n","                malzeme_hata_sayilari[malzeme_turu] = [0] * len(kacak_sayilari)\n","\n","            malzeme_hata_sayilari[malzeme_turu] = [a + b for a, b in zip(malzeme_hata_sayilari[malzeme_turu], kacak_sayilari)]\n","\n","    print(f\"Toplam Test Sayısı: {toplam_test_sayisi}\")\n","\n","    print(\"Malzeme Çeşitlerine Göre Hata Oranları:\")\n","    for malzeme_turu, kacak_sayilari in malzeme_hata_sayilari.items():\n","        print(f\"{malzeme_turu}:\")\n","        for i, kacak_sayisi in enumerate(kacak_sayilari):\n","            hata_orani = kacak_sayisi / toplam_test_sayisi if toplam_test_sayisi != 0 else 0\n","            print(f\"  {kacak_yerleri[i]} - Hata Oranı: %{hata_orani * 100}\")\n","\n","file_path = \"Veri.xlsx\"\n","petek_kodu = int(input(\"Petek Kodu: \"))\n","malzeme_turu = input(\"Malzeme Türü: \")\n","test_sayisi = int(input(\"Test Sayısı: \"))\n","\n","kacak_yerleri = []\n","kacak_sayilari = []\n","\n","while True:\n","    kacak_yeri = input(\"Kaçak Görülen Yer (Çıkmak için 'exit'): \")\n","    if kacak_yeri.lower() == 'exit':\n","        break\n","    kacak_sayisi = int(input(f\"{kacak_yeri} için Kaçak Sayısı: \"))\n","    kacak_yerleri.append(kacak_yeri)\n","    kacak_sayilari.append(kacak_sayisi)\n","\n","verileri_excel_dosyasina_yaz(file_path, petek_kodu, malzeme_turu, test_sayisi, kacak_yerleri, kacak_sayilari)\n","hata_oranlarini_hesapla_ve_ciktiyi_al(file_path)\n","from google.colab import files\n","files.download('Veri.xlsx')\n"]}]}